name: Create and publish a Docker image

# Configures this workflow to run every time a change is pushed to the branch called `release`.
on:
  release:
    types: published
  workflow_dispatch:

# Defines two custom environment variables for the workflow.
env:
  REGISTRY: docker.io
  DOCKERFILE_DIR: ./src
  DOCKER_IMAGE_NAME: videoschnitt.engine

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Print labels and tags
        run: |
          echo "Labels: ${{ steps.meta.outputs.labels }}"
          echo "Tags: ${{ steps.meta.outputs.tags }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.DOCKERFILE_DIR }}
          file: ${{ env.DOCKERFILE_DIR }}/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        id: docker_build

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}
          subject-digest: ${{ steps.docker_build.outputs.digest }}
          push-to-registry: false
